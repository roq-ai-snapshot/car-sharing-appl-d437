generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time       DateTime    @db.Timestamp(6)
  end_time         DateTime    @db.Timestamp(6)
  user_id          String      @db.Uuid
  car_id           String      @db.Uuid
  pickup_location  String      @db.VarChar(255)
  dropoff_location String      @db.VarChar(255)
  created_at       DateTime    @default(now()) @db.Timestamp(6)
  updated_at       DateTime    @default(now()) @db.Timestamp(6)
  car              car         @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  complaint        complaint[]
  review           review[]
}

model car {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  make          String    @db.VarChar(50)
  model         String    @db.VarChar(50)
  year          Int
  color         String    @db.VarChar(20)
  license_plate String    @db.VarChar(20)
  user_id       String    @db.Uuid
  company_id    String    @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  booking       booking[]
  company       company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review        review[]
}

model company {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description     String?  @db.VarChar(255)
  address         String?  @db.VarChar(255)
  city            String?  @db.VarChar(100)
  state           String?  @db.VarChar(100)
  zip_code        String?  @db.VarChar(20)
  name            String   @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  user_id         String   @db.Uuid
  tenant_id       String   @db.VarChar(255)
  invoice_number  String?  @unique @db.VarChar(255)
  customer_number String?  @unique @db.VarChar(255)
  car             car[]
  user            user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model complaint {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String    @db.VarChar(255)
  status      String    @db.VarChar(50)
  user_id     String    @db.Uuid
  booking_id  String    @db.Uuid
  resolved_at DateTime? @db.Timestamp(6)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking   @relation(fields: [booking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating     Int
  comment    String?  @db.VarChar(255)
  user_id    String   @db.Uuid
  car_id     String   @db.Uuid
  booking_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  booking    booking  @relation(fields: [booking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  car        car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  booking     booking[]
  car         car[]
  company     company[]
  complaint   complaint[]
  review      review[]
}
